#!/usr/bin/env bash


##
## * $ man 3 dirname
## * $ man 1 dirname
## * $ man 3 basename
## * $ man 1 basenaem
## * https://en.wikipedia.org/wiki/Dirname
## * https://en.wikipedia.org/wiki/Basename
## * https://zh.wikipedia.org/zh-tw/Dirname
## * https://zh.wikipedia.org/zh-tw/Basename
##


util_error_echo () {
	echo "$@" 1>&2
}

find_file_name () {

	##
	## * target_path is dir --> show parent_path
	## * target_path is file --> show parent_path
	##

	local target_path="$1"
	local file_name


	if [ "none$target_path" = 'none' ]; then
		target_path="$(pwd)"
	fi


	if ! [ -e "$target_path" ]; then
		##echo "## File Not Exist:"
		#echo "$target_path"
		return 1
	fi


	if [ -d "$target_path" ]; then					## for dir
		#echo "## Handle Dir:"
		#echo "$target_path"

		if [ "${target_path:0:1}" = '/' ]; then		## for example [/] or [/boot/grub]
			#echo '## Lead: /'
			if [ $target_path = '/' ]; then 		## for [/]
				file_name=''
			else									## for example [/boot/grub]
				file_name="$(basename "$target_path")"
			fi
		else										## for example [.] or [./..] or [..] or [../..] or [sub/sub1]
			file_name="$(basename "$target_path")"
		fi


		echo $file_name
		return 0
	fi

	## for file
	#echo "## Handle File:"
	#echo "$target_path"

	file_name="$(basename "$target_path")"
	echo "$file_name"
	return 0

}


find_dir_path () {

	##
	## * target_path is dir --> show parent_path
	## * target_path is file --> show parent_path
	##

	local target_path="$1"
	local file_path
	local dir_path

	if [ "none$target_path" = 'none' ]; then
		target_path="$(pwd)"
	fi


	if ! [ -e "$target_path" ]; then
		##echo "## File Not Exist:"
		#echo "$target_path"
		return 1
	fi


	if [ -d "$target_path" ]; then					## for dir
		#echo "## Handle Dir:"
		#echo "$target_path"

		if [ "${target_path:0:1}" = '/' ]; then		## for example [/] or [/boot/grub]
			#echo '## Lead: /'
			if [ $target_path = '/' ]; then 		## for [/]
				dir_path='/'
			else									## for example [/boot/grub]
				dir_path="$target_path/.."
			fi
		else										## for example [.] or [./..] or [..] or [../..] or [sub/sub1]
			dir_path="$(pwd)/$target_path/.."
		fi

		#dir_path="$(cd -- "$dir_path" 2> /dev/null && pwd)"
		#dir_path="$(cd -- "$dir_path" 2> /dev/null ; pwd)"
		dir_path="$(cd -- "$dir_path" ; pwd)"
		echo $dir_path
		return 0
	fi

	## for file
	#echo "## Handle File:"
	#echo "$target_path"

	file_path="$target_path"
	#dir_path="$(cd -- "$(dirname -- "$file_path")" 2> /dev/null && pwd)"
	#dir_path="$(cd -- "$(dirname -- "$file_path")" 2> /dev/null ; pwd)"
	dir_path="$(cd -- "$(dirname -- "$file_path")" ; pwd)"
	echo "$dir_path"
	return 0

}


xftne_main () {
	local editor='ne'
	local target_path="$1"
	local file_path
	local file_name
	local dir_path

	util_error_echo
	util_error_echo "## Editor:"
	util_error_echo
	util_error_echo "$editor"
	util_error_echo

	if [ "none$target_path" = 'none' ]; then
		target_path="$(pwd)"
	fi

	if ! [ -e "$target_path" ]; then

		util_error_echo
		util_error_echo "## File Not Exist:"
		util_error_echo
		util_error_echo "$target_path"
		util_error_echo

		return 1
	fi

	file_path="$(realpath "$target_path")"

	if [ -d "$file_path" ]; then

		util_error_echo
		util_error_echo "## Is Dir:"
		util_error_echo
		util_error_echo "$target_path"
		util_error_echo

		return 1
	fi

	if ! file_name="$(find_file_name "$file_path")"; then
		file_name="$(basename "$target_path")"
	fi

	if ! dir_path="$(find_dir_path "$file_path")"; then
		dir_path="$(dirname "$target_path")"
	fi

	#util_error_echo "target_path=$target_path"
	#util_error_echo "dir_path=$dir_path"
	#util_error_echo "file_name=$file_name"
	#util_error_echo "file_path=$file_path"

	util_error_echo
	util_error_echo "## Command:"
	util_error_echo
	util_error_echo "xfce4-terminal --tab --command=\"$editor $file_path\" --title=\"$file_path\" --working-directory=\"$dir_path\" --default-working-directory=\"$dir_path\""
	util_error_echo

	xfce4-terminal --tab --command="$editor $file_path" --title="$file_path" --working-directory="$dir_path" --default-working-directory="$dir_path"

}

xftne_main "$@"
